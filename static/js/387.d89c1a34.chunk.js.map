{"version":3,"file":"static/js/387.d89c1a34.chunk.js","mappings":"4QAEaA,EAAYC,EAAAA,GAAAA,GAAH,wIAQTC,EAAcD,EAAAA,GAAAA,GAAH,mPAWXE,EAAWF,EAAAA,GAAAA,EAAH,yHAORG,EAAkBH,EAAAA,GAAAA,EAAH,oG,SClBfI,EAAO,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAeJ,GAFxB,gBAENF,EAFM,EAENA,KACRC,EAAQD,GAHM,gDAKdO,QAAQC,IAAR,MALc,yDAAH,qDAQfH,GACD,GAAE,CAACH,IAEgB,IAAhBF,EAAKS,QAEL,SAACZ,EAAD,qDAIF,SAACJ,EAAD,UACGO,EAAKU,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACnC,OACE,UAACnB,EAAD,YACE,gBACEoB,IAAG,yCAAoCH,GACvCI,IAAKH,KAEP,UAACjB,EAAD,YACE,kCACCiB,MAEH,UAACjB,EAAD,YACE,sCACCkB,OAXaH,EAerB,KAGN,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 224px);\n  gap: 12px;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const CardWrapper = styled.li`\n  border-radius: 4px;\n  list-style: none;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const CastName = styled.p`\n  text-align: center;\n  margin: 0 auto;\n  padding: 4px;\n  margin-bottom: 0;\n  color: black;\n`;\nexport const CastInformation = styled.p`\n  padding: 4px;\n  margin-bottom: 0;\n  font-weight: 700;\n  color: black;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchCastMovie } from 'components/apiMovie.js';\nimport {\n  CardWrapper,\n  Container,\n  CastName,\n  CastInformation,\n} from './Cast.styled';\n\nexport const Cast = () => {\n  const [cast, setCast] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fatchCast = async () => {\n      try {\n        const { cast } = await fetchCastMovie(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fatchCast();\n  }, [movieId]);\n\n  if (cast.length === 0) {\n    return (\n      <CastInformation>We don't have any cast for this movie</CastInformation>\n    );\n  }\n  return (\n    <Container>\n      {cast.map(({ id, profile_path, name, character }) => {\n        return (\n          <CardWrapper key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n              alt={name}\n            />\n            <CastName>\n              <b> Name:</b>\n              {name}\n            </CastName>\n            <CastName>\n              <b>Character:</b>\n              {character}\n            </CastName>\n          </CardWrapper>\n        );\n      })}\n    </Container>\n  );\n};\n"],"names":["Container","styled","CardWrapper","CastName","CastInformation","Cast","useState","cast","setCast","movieId","useParams","useEffect","fatchCast","fetchCastMovie","console","log","length","map","id","profile_path","name","character","src","alt"],"sourceRoot":""}