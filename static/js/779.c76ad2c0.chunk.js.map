{"version":3,"file":"static/js/779.c76ad2c0.chunk.js","mappings":"6QAEaA,EAAYC,EAAAA,GAAAA,GAAH,uCAITC,EAAcD,EAAAA,GAAAA,GAAH,uQAaXE,EAAqBF,EAAAA,GAAAA,EAAH,oG,SCdlBG,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAEYC,EAAAA,EAAAA,IAAkBJ,GAF9B,gBAENK,EAFM,EAENA,QACRN,EAAWM,GAHG,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfJ,GACD,GAAE,CAACH,IACmB,IAAnBF,EAAQU,QAER,SAACb,EAAD,wDAOF,SAACH,EAAD,UACGM,EAAQW,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAAClB,EAAD,YACE,wBACE,oCAAYiB,QAEd,uBAAIC,MAJYF,EAOrB,KAGN,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  padding: 0;\n`;\n\nexport const CardWrapper = styled.li`\n  border-radius: 4px;\n  list-style: none;\n  padding: 16px;\n\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const ReviewsInformation = styled.p`\n  padding: 4px;\n  margin-bottom: 0;\n  font-weight: 700;\n  color: black;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchReviewsMovie } from 'components/apiMovie.js';\nimport { Container, CardWrapper, ReviewsInformation } from './Reviews.styled';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fatchCast = async () => {\n      try {\n        const { results } = await fetchReviewsMovie(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fatchCast();\n  }, [movieId]);\n  if (reviews.length === 0) {\n    return (\n      <ReviewsInformation>\n        We don't have any rewievs for this movie\n      </ReviewsInformation>\n    );\n  }\n\n  return (\n    <Container>\n      {reviews.map(({ id, author, content }) => {\n        return (\n          <CardWrapper key={id}>\n            <p>\n              <b>Author: {author}</b>\n            </p>\n            <p>{content}</p>\n          </CardWrapper>\n        );\n      })}\n    </Container>\n  );\n};\n"],"names":["Container","styled","CardWrapper","ReviewsInformation","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","fatchCast","fetchReviewsMovie","results","console","log","length","map","id","author","content"],"sourceRoot":""}